# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

fusion_mode: bifpn
node_mode: C2f_Faster
head_channel: 256

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f_Faster, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f_Faster, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f_Faster, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f_Faster, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0-p2 head
head:
  - [2, 1, Conv, [head_channel]]  # 10-P2/4
  - [4, 1, Conv, [head_channel]]  # 11-P3/8
  - [6, 1, Conv, [head_channel]]  # 12-P4/
  - [9, 1, Conv, [head_channel]]  # 13-P5/

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 14 P5->P4
  - [[-1, 12], 1, Fusion, [fusion_mode]] # 15
  - [-1, 3, node_mode, [head_channel]] # 16-P4/16
  
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 17 P4->P3
  - [[-1, 11], 1, Fusion, [fusion_mode]] # 18
  - [-1, 3, node_mode, [head_channel]] # 19-P3/8

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 20 P3->P2
  - [[-1, 10], 1, Fusion, [fusion_mode]] # 21
  - [-1, 3, node_mode, [head_channel]] # 22-P2/4

  - [0, 1, Conv, [head_channel, 3, 2]] # 23 P1->P2
  - [[-1, 10, 22], 1, Fusion, [fusion_mode]] # 24
  - [-1, 3, node_mode, [head_channel]] # 25-P2/4

  - [-1, 1, Conv, [head_channel, 3, 2]] # 26 P2->P3
  - [[-1, 11,19], 1, Fusion, [fusion_mode]] # 27
  - [-1, 3, node_mode, [head_channel]] # 28-P3/16

  - [-1, 1, Conv, [head_channel, 3, 2]] # 29 P3->P4
  - [[-1, 12, 16], 1, Fusion, [fusion_mode]] # 30
  - [-1, 3, node_mode, [head_channel]] # 31-P4/16

  - [-1, 1, Conv, [head_channel, 3, 2]] # 32 P4->P5
  - [[-1, 13], 1, Fusion, [fusion_mode]] # 33
  - [-1, 3, node_mode, [head_channel]] # 34-P5/32

  - [[25, 28, 31, 34], 1, Detect, [nc]]  # Detect(P2, P3, P4, P5)

#  - [[18, 21, 24, 27], 1, Segment, [nc, 32, 265]]  # Segment (P2, P3, P4, P5)
